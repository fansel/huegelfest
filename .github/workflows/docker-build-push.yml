name: Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      deploy_only:
        description: 'Nur deployen ohne Build'
        required: false
        type: boolean
        default: false

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-push:
    if: ${{ github.event.inputs.deploy_only != 'true' }}
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Use temporary Docker config
        run: |
          mkdir -p /tmp/docker-config
          echo '{}' > /tmp/docker-config/config.json
        env:
          DOCKER_CONFIG: /tmp/docker-config

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
        env:
          DOCKER_CONFIG: /tmp/docker-config

      - name: Build and push web app
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/huegelfest-web:buildcache,ignore-error=true
          cache-to: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/huegelfest-web:buildcache,mode=max
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/huegelfest-web:latest
            ${{ env.DOCKERHUB_USERNAME }}/huegelfest-web:${{ github.sha }}

  deploy:
    needs: build-and-push
    if: ${{ always() && (needs.build-and-push.result == 'success' || needs.build-and-push.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd /opt/huegelfest && \
            docker compose pull && \
            docker compose up -d
          '